# name: ECR Build & Deploy to ECS

# on:
#   push:
#     branches:
#       - master

# jobs:
#   docker_deploy:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3

#       - name: Configure AWS credentials
#         uses: aws-actions/configure-aws-credentials@v2
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-region: us-east-1

#       - name: Generate dynamic version
#         id: version
#         run: |
#           VERSION="v1.0-$(date +%Y%m%d%H%M)"
#           echo "version=$VERSION" >> $GITHUB_OUTPUT

#       - name: Log in to Amazon ECR
#         run: |
#           aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 123456789012.dkr.ecr.us-east-1.amazonaws.com

#       - name: Build Docker image using build_app.sh
#         working-directory: BANG
#         run: |
#           VERSION=${{ steps.version.outputs.version }}
#           ./build_app.sh $VERSION

#           # Tag and push to ECR
#           ECR_REPO=123456789012.dkr.ecr.us-east-1.amazonaws.com/bang
#           docker tag anjali1404/bang:latest $ECR_REPO:latest
#           docker tag anjali1404/bang:latest $ECR_REPO:$VERSION

#           docker push $ECR_REPO:latest
#           docker push $ECR_REPO:$VERSION

#       - name: Deploy to ECS using latest image
#         run: |
#           aws ecs update-service \
#             --cluster anji-test \
#             --service anji-service \
#             --force-new-deployment
#         env:
#           AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           AWS_REGION: us-east-1
